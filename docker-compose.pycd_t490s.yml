services:
  #######################################
  # MariaDB server
  #######################################
  mariadb:
    build:
      context: docker/mariadb/
      dockerfile: MariaDB-11.5.2.Dockerfile
    image: pc_mariadb
    container_name: pc_mariadb
    ports:
      - "3306:3306"
    # restart: unless-stopped
    volumes:
      - mariadb:/var/lib/mysql
      - ./etc/mariadb/z999-docker1.cnf:/etc/mysql/conf.d/z999-docker.cnf
      - ./backup:/storage
    env_file:
      - etc/environment.yml
    environment:
      TZ: "Asia/Jakarta"
    mem_limit: 1g
    # networks:
    #   default:
    #     ipv4_address: 172.18.0.52

  mongodb:
    image: "mongo:7.0.14-jammy"
    container_name: pc_mongodb
    volumes:
      - mongodb:/data/db
    ports:
      - "27017:27017"
    # restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    mem_limit: 400m
    # networks:
    #   default:
    #     ipv4_address: 172.18.0.55

  #######################################
  # Redis
  #######################################
  redis:
    image: redis:alpine
    container_name: pc_redis
    # networks:
    #   default:
    #     ipv4_address: 172.18.0.254
    ports:
      - "6379:6379"
    volumes:
      - redis:/data
    mem_limit: 200m
    # restart: unless-stopped
    environment:
      VIRTUAL_HOST: "redis.pc.vm"
      VIRTUAL_PORT: "80"

  #######################################
  # RabbitMQ
  #######################################
  rabbit:
    image: rabbitmq:3.13.0-management
    container_name: pc_rabbit
    hostname: pc_rabbit
    # networks:
    #   default:
    #     ipv4_address: 172.18.0.253
    ports:
      - "5672:5672"
      - "15672:15672"
    mem_limit: 300m
    # restart: unless-stopped
    volumes:
      - ./etc/rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins
      - rabbitmq-homedir:/var/lib/rabbitmq
    environment:
      RABBITMQ_ERLANG_COOKIE: "RABBITCOOKIE"
      RABBITMQ_NODENAME: "rabbit@pc_rabbit"
      RABBITMQ_DEFAULT_USER: "dev"
      RABBITMQ_DEFAULT_PASS: "secret"
      VIRTUAL_HOST: "rabbit.pc.vm"
      VIRTUAL_PORT: "15672"

  #######################################
  # KrakenD
  #######################################
  krakend:
    image: devopsfaith/krakend:2.7.2-watch
    # image: devopsfaith/krakend:2.7.2
    # build:
    #   context: docker/krakend/
    #   dockerfile: Krakend-2.7.2.Dockerfile
    container_name: ddc_krakend
    ports:
      - "8080:8080"
    expose:
      - "8090"
      - "9091"
    environment:
      VIRTUAL_HOST: "api.paycloud.vm"
      VIRTUAL_PORT: "8080"
      KRAKEND_CONFIG: "krakend.json"
      FC_ENABLE: 1
      FC_SETTINGS: "./config/settings"
      # FC_PARTIALS: "./partials"
      FC_TEMPLATES: "./config/templates"
      FC_OUT: "/etc/krakend/krakend.json"
    mem_limit: 2g
    volumes:
      - ./:/docker/
      - /home/nath/Documents/paycloud_be/paycloud-apigateway:/etc/krakend
    # networks:
    #   default:
    #     ipv4_address: 172.18.0.59
    extra_hosts:
      - "service01:172.18.0.1"
      - "service02:172.18.0.1"
      - "servicestaging01:172.18.0.1"
      - "servicestaging02:172.18.0.1"

  #######################################
  # GO Services
  #######################################
  settlement-module:
    extends:
      file: common-services.yml
      service: go1.22
    container_name: go_pc_1.22
    external_links:
      - pc_mariadb:mariadb
    environment:
      ENV: "dev"
      GO_SVC: "paycloud-be-settlement-module"
    mem_limit: 200m
    depends_on:
      mariadb:
        condition: service_started
        restart: true
      redis:
        condition: service_started
        restart: true
      rabbit:
        condition: service_started
    # networks:
    #   default:
    #     ipv4_address: 172.18.0.121
    volumes:
      - /home/nath/go/src/paycloud-be-settlement-module:/go/src/paycloud-be-settlement-module
    working_dir: "/go/src/paycloud-be-settlement-module"

#######################################
# Volumes
#######################################
volumes:
  mariadb:
    driver: local
    driver_opts:
      type: bind
      device: /home/lxc/mariadb_pc/db
      o: bind
  mongodb:
    driver: local
    driver_opts:
      type: bind
      device: /home/lxc/mongodata_pc
      o: bind
  gosrc:
    driver: local
    driver_opts:
      type: bind
      device: /home/nath/go/src
      o: bind
  gopkg:
    driver: local
    driver_opts:
      type: bind
      device: /home/nath/go/pkg
      o: bind
  rabbitmq-homedir:
    driver: local
    driver_opts:
      type: bind
      device: /home/nath/lxc/rabbitmq-homedir
      o: bind
  redis:
    driver: local
    driver_opts:
      type: bind
      device: /home/nath/lxc/redis_pc
      o: bind

networks:
  default:
    name: dev
    external: true
